// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component KeyTable Matches snapshot 1`] = `
<div id="dataTable">
  <v-row-stub tag="div" justify="center"><span style="font-weight: bold;">Test</span>
    <v-spacer-stub></v-spacer-stub> <span>Test table</span>
  </v-row-stub>
  <v-data-table-stub items="[object Object],[object Object],[object Object]" options="[object Object]" sortby="" sortdesc="" customsort="function sortItems(items, sortBy, sortDesc, locale, customSorters) {
  if (sortBy === null || !sortBy.length) return items;
  var stringCollator = new Intl.Collator(locale, {
    sensitivity: 'accent',
    usage: 'sort'
  });
  return items.sort(function (a, b) {
    var _a, _b;

    for (var i = 0; i < sortBy.length; i++) {
      var sortKey = sortBy[i];
      var sortA = getObjectValueByPath(a, sortKey);
      var sortB = getObjectValueByPath(b, sortKey);

      if (sortDesc[i]) {
        _a = __read([sortB, sortA], 2), sortA = _a[0], sortB = _a[1];
      }

      if (customSorters &amp;&amp; customSorters[sortKey]) {
        var customResult = customSorters[sortKey](sortA, sortB);
        if (!customResult) continue;
        return customResult;
      } // Check if both cannot be evaluated


      if (sortA === null &amp;&amp; sortB === null) {
        continue;
      }

      _b = __read([sortA, sortB].map(function (s) {
        return (s || '').toString().toLocaleLowerCase();
      }), 2), sortA = _b[0], sortB = _b[1];

      if (sortA !== sortB) {
        if (!isNaN(sortA) &amp;&amp; !isNaN(sortB)) return Number(sortA) - Number(sortB);
        return stringCollator.compare(sortA, sortB);
      }
    }

    return 0;
  });
}" page="1" itemsperpage="10" groupby="" groupdesc="" customgroup="function groupItems(items, groupBy, groupDesc) {
  var key = groupBy[0];
  var groups = [];
  var current = null;

  for (var i = 0; i < items.length; i++) {
    var item = items[i];
    var val = getObjectValueByPath(item, key);

    if (current !== val) {
      current = val;
      groups.push({
        name: val,
        items: []
      });
    }

    groups[groups.length - 1].items.push(item);
  }

  return groups;
}" locale="en-US" search="" customfilter="function defaultFilter(value, search, item) {
  return value != null &amp;&amp; search != null &amp;&amp; typeof value !== 'boolean' &amp;&amp; value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1;
}" serveritemslength="-1" itemkey="id" value="" expanded="" mobilebreakpoint="600" noresultstext="$vuetify.dataIterator.noResultsText" nodatatext="Det skjedde noe feil da vi prøvde å hente status for nøkler" loadingtext="Henter inn status for nøkler" selectablekey="isSelectable" headers="[object Object],[object Object],[object Object],[object Object],[object Object]" height="100%" expandicon="$expand" style="width: 100%; background-color: rgba(0, 0, 0, 0); height: 40vh;"></v-data-table-stub>
</div>
`;
